input {
  beats {
    port => "5043"
  }
}
filter {
  # if the beat is from modusbox
  #filter out metric events
  if "metric" not in [tags] {
    mutate {
      rename => {"@timestamp" => "[beat][processing_timestamp]"}
    }
    grok {
      match => { "message" => "\[(?<log_timestamp>%{TIMESTAMP_ISO8601}%{SPACE}%{TZ})\]%{SPACE}%{LOGLEVEL}%{SPACE}%{SYSLOG5424PRINTASCII}%{SPACE}%{PROG:log_source}%{SPACE}(.*TraceID=)?(%{UUID:l1p_trace_id})?(.*(L1P_METRIC_TIMER:\[(?<timer_name>%{JAVACLASS})\]\[(?<timer_value>%{NUMBER})\]|L1P_METRIC_COUNTER:\[(?<counter_name>%{JAVACLASS})\]|L1P_METRIC_GAUGE:\[(?<gauge_name>%{JAVACLASS})\]\[(?<gauge_value>%{NUMBER})\]))?.*"}
    }
    date {
      match => ["log_timestamp", "yyyy-MM-dd HH:mm:ss,SSS ZZZ"]
      remove_field => ["log_timestamp", "log_source"]
    }
    if [counter_name] {
      metrics {
        meter => ["%{counter_name}"]
        add_tag => ["metric", "counter"]
      }
    }
    if [timer_name] {
      metrics {
        timer => ["%{timer_name}", "%{timer_value}"]
        add_tag => ["metric", "timer"]
      }
    }
  }
  # if the beat is from ripple
}
output {
  stdout { codec => rubydebug }
  if "metric" not in [tags] {
    elasticsearch{
      hosts => ["localhost:9200"]
      index => "l1p_index_%{+YYYY.MM.dd}"
      document_type => "l1p_log"
    }
  }
##else if "metric" in [tags] {
#      kafka {
#        codec => plain {
#           format => "%{message}"
#        }
#        topic_id => "mytopic"
#      }
#  }
}
